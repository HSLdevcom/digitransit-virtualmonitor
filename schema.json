{
  "__schema": {
    "queryType": {
      "name": "QueryType"
    },
    "mutationType": null,
    "subscriptionType": null,
    "types": [
      {
        "kind": "OBJECT",
        "name": "QueryType",
        "description": null,
        "fields": [
          {
            "name": "node",
            "description": "Fetches an object given its ID",
            "args": [
              {
                "name": "id",
                "description": "The ID of an object",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "feeds",
            "description": "Get all available feeds",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Feed",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "agencies",
            "description": "Get all agencies",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Agency",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ticketTypes",
            "description": "Return list of available ticket types",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TicketType",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "agency",
            "description": "Get a single agency based on agency ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Agency",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stops",
            "description": "Get all stops",
            "args": [
              {
                "name": "ids",
                "description": "Return stops with these ids",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "feeds",
                "description": "List of feeds from which stops are returned. Defaults to all feeds",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "name",
                "description": "Query stops by this name",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxResults",
                "description": "Number of results to return when using `name` argument. Defaults to 10",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopsByBbox",
            "description": "Get all stops within the specified bounding box",
            "args": [
              {
                "name": "minLat",
                "description": "Southern bound of the bounding box",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "minLon",
                "description": "Western bound of the bounding box",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "maxLat",
                "description": "Northern bound of the bounding box",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "maxLon",
                "description": "Eastern bound of the bounding box",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "agency",
                "description": "Deprecated, use argument `feeds` instead",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "feeds",
                "description": "List of feed ids from which stops are returned",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopsByRadius",
            "description": "Get all stops within the specified radius from a location. The returned type\nis a Relay connection (see\nhttps://facebook.github.io/relay/graphql/connections.htm). The stopAtDistance\ntype has two values: stop and distance.",
            "args": [
              {
                "name": "lat",
                "description": "Latitude of the location (WGS 84)",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "lon",
                "description": "Longitude of the location (WGS 84)",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "radius",
                "description": "Radius (in meters) to search for from the specified location. Note that this\nis walking distance along streets and paths rather than a geographic distance.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "agency",
                "description": "Deprecated, use argument `feeds` instead",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "feeds",
                "description": "List of feed ids from which stops are returned",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "stopAtDistanceConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "nearest",
            "description": "Get all places (stops, stations, etc. with coordinates) within the specified\nradius from a location. The returned type is a Relay connection (see\nhttps://facebook.github.io/relay/graphql/connections.htm). The placeAtDistance\ntype has two fields: place and distance. The search is done by walking so the\ndistance is according to the network of walkable streets and paths.",
            "args": [
              {
                "name": "lat",
                "description": "Latitude of the location (WGS 84)",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "lon",
                "description": "Longitude of the location (WGS 84)",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "maxDistance",
                "description": "Maximum distance (in meters) to search for from the specified location. Note\nthat this is walking distance along streets and paths rather than a\ngeographic distance. Default is 2000m",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "2000"
              },
              {
                "name": "maxResults",
                "description": "Maximum number of results. Search is stopped when this limit is reached. Default is 20.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "20"
              },
              {
                "name": "filterByPlaceTypes",
                "description": "Only return places that are one of these types, e.g. `STOP` or `BICYCLE_RENT`",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "FilterPlaceType",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "filterByModes",
                "description": "Only return places that are related to one of these transport modes. This\nargument can be used to return e.g. only nearest railway stations or only\nnearest places related to bicycling.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Mode",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "filterByIds",
                "description": "Only include places that match one of the given GTFS ids.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputFilters",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "first",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "placeAtDistanceConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departureRow",
            "description": "Get a single departure row based on its ID (ID format is `FeedId:StopId:PatternId`)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DepartureRow",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stop",
            "description": "Get a single stop based on its ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "station",
            "description": "Get a single station based on its ID, i.e. value of field `gtfsId` (format is `FeedId:StopId`)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stations",
            "description": "Get all stations",
            "args": [
              {
                "name": "ids",
                "description": "Only return stations that match one of the ids in this list",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "feeds",
                "description": "List of feeds from which stations are returned. Defaults to all feeds",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "name",
                "description": "Query stations by name",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxResults",
                "description": "Number of results to return when using `name` argument. Defaults to 10",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routes",
            "description": "Get all routes",
            "args": [
              {
                "name": "ids",
                "description": "Only return routes with these ids",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "feeds",
                "description": "Only return routes with these feedIds",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "name",
                "description": "Query routes by this name",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "modes",
                "description": "Deprecated, use argument `transportModes` instead.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "transportModes",
                "description": "Only include routes, which use one of these modes",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "Mode",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "route",
            "description": "Get a single route based on its ID, i.e. value of field `gtfsId` (format is `FeedId:RouteId`)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Route",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trips",
            "description": "Get all trips",
            "args": [
              {
                "name": "feeds",
                "description": "Only return trips with these feedIds",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trip",
            "description": "Get a single trip based on its ID, i.e. value of field `gtfsId` (format is `FeedId:TripId`)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Trip",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fuzzyTrip",
            "description": "Finds a trip matching the given parameters. This query type is useful if the\nid of a trip is not known, but other details uniquely identifying the trip are\navailable from some source (e.g. MQTT vehicle positions).",
            "args": [
              {
                "name": "route",
                "description": "id of the route",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "direction",
                "description": "Direction of the trip, possible values: 0, 1 or -1.  \n -1 indicates that the direction is irrelevant, i.e. in case the route has\ntrips only in one direction. See field `directionId` of Pattern.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "-1"
              },
              {
                "name": "date",
                "description": "Departure date of the trip, format: YYYY-MM-DD",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "time",
                "description": "Departure time of the trip, format: seconds since midnight of the departure date",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Trip",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cancelledTripTimes",
            "description": "Get cancelled TripTimes.",
            "args": [
              {
                "name": "feeds",
                "description": "Feed feedIds (e.g. [\"HSL\"]).",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "routes",
                "description": "Route gtfsIds (e.g. [\"HSL:1098\"]).",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "patterns",
                "description": "TripPattern codes (e.g. [\"HSL:1098:1:01\"]).",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "trips",
                "description": "Trip gtfsIds (e.g. [\"HSL:1098_20190405_Ma_2_1455\"]).",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "minDate",
                "description": "Only cancelled trip times scheduled to run on minDate or after are returned. Format: \"2019-12-23\" or \"20191223\".",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxDate",
                "description": "Only cancelled trip times scheduled to run on maxDate or before are returned. Format: \"2019-12-23\" or \"20191223\".",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "minDepartureTime",
                "description": "Only cancelled trip times that have first stop departure time at\nminDepartureTime or after are returned. Format: seconds since midnight of minDate.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxDepartureTime",
                "description": "Only cancelled trip times that have first stop departure time at\nmaxDepartureTime or before are returned. Format: seconds since midnight of maxDate.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "minArrivalTime",
                "description": "Only cancelled trip times that have last stop arrival time at minArrivalTime\nor after are returned. Format: seconds since midnight of minDate.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxArrivalTime",
                "description": "Only cancelled trip times that have last stop arrival time at maxArrivalTime\nor before are returned. Format: seconds since midnight of maxDate.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "patterns",
            "description": "Get all patterns",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pattern",
            "description": "Get a single pattern based on its ID, i.e. value of field `code` (format is\n`FeedId:RouteId:DirectionId:PatternVariantNumber`)",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Pattern",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "clusters",
            "description": "Get all clusters",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Cluster",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cluster",
            "description": "Get a single cluster based on its ID, i.e. value of field `gtfsId`",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Cluster",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alerts",
            "description": "Get all active alerts",
            "args": [
              {
                "name": "feeds",
                "description": "Only return alerts in these feeds",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "severityLevel",
                "description": "Only return alerts with these severity levels",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AlertSeverityLevelType",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "effect",
                "description": "Only return alerts with these effects",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AlertEffectType",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "cause",
                "description": "Only return alerts with these causes",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AlertCauseType",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "route",
                "description": "Only return alerts affecting these routes",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              },
              {
                "name": "stop",
                "description": "Only return alerts affecting these stops",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Alert",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceTimeRange",
            "description": "Get the time range for which the API has data available",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "serviceTimeRange",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStations",
            "description": "Get all bike rental stations",
            "args": [
              {
                "name": "ids",
                "description": "Return bike rental stations with these ids.  \n **Note:** if an id is invalid (or the bike rental station service is\nunavailable) the returned list will contain `null` values.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BikeRentalStation",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStation",
            "description": "Get a single bike rental station based on its ID, i.e. value of field `stationId`",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParks",
            "description": "Get all bike parks",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BikePark",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": "Get a single bike park based on its ID, i.e. value of field `bikeParkId`",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BikePark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carParks",
            "description": "Get all car parks",
            "args": [
              {
                "name": "ids",
                "description": "Return car parks with these ids.  \n **Note:** if an id is invalid (or the car park service is unavailable) the returned list will contain `null` values.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "CarPark",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carPark",
            "description": "Get a single car park based on its ID, i.e. value of field `carParkId`",
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CarPark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "viewer",
            "description": "Needed until https://github.com/facebook/relay/issues/112 is resolved",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "QueryType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "plan",
            "description": "Plans an itinerary from point A to point B based on the given arguments",
            "args": [
              {
                "name": "date",
                "description": "Date of departure or arrival in format YYYY-MM-DD. Default value: current date",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "time",
                "description": "Time of departure or arrival in format hh:mm:ss. Default value: current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "from",
                "description": "The geographical location where the itinerary begins.  \n Use either this argument or `fromPlace`, but not both.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputCoordinates",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "to",
                "description": "The geographical location where the itinerary ends.  \n Use either this argument or `toPlace`, but not both.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputCoordinates",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "fromPlace",
                "description": "The place where the itinerary begins in format `name::place`, where `place`\nis either a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id\n(e.g. `Pasila::HSL:1000202`).  \n Use either this argument or `from`, but not both.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "toPlace",
                "description": "The place where the itinerary ends in format `name::place`, where `place` is\neither a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id\n(e.g. `Pasila::HSL:1000202`).  \n Use either this argument or `to`, but not both.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "wheelchair",
                "description": "Whether the itinerary must be wheelchair accessible. Default value: false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "numItineraries",
                "description": "The maximum number of itineraries to return. Default value: 3.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "3"
              },
              {
                "name": "maxWalkDistance",
                "description": "The maximum distance (in meters) the user is willing to walk per walking\nsection. If the only transport mode allowed is `WALK`, then the value of\nthis argument is ignored.  \n Default: 2000m  \n Maximum value: 15000m  \n **Note:** If this argument has a relatively small value and only some\ntransport modes are allowed (e.g. `WALK` and `RAIL`), it is possible to get\nan itinerary which has (useless) back and forth public transport legs to\navoid walking too long distances.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxPreTransitTime",
                "description": "The maximum time (in seconds) of pre-transit travel when using\ndrive-to-transit (park and ride or kiss and ride). Default value: 1800.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxSlope",
                "description": "The maximum slope, up or downhill, that can be used in wheelchair accessible\nrouting. Value is between 0 and 1, and calculated by dividing change of\nelevation by change of distance. Default value: 0.0833333333333",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "carParkCarLegWeight",
                "description": "How expensive it is to drive a car when car&parking, increase this value to\nmake car driving legs shorter. Default value: 1.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "itineraryFiltering",
                "description": "How easily bad itineraries are filtered from results. Value 0 (default)\ndisables filtering. Itineraries are filtered if they are worse than another\none in some respect (e.g. more walking) by more than the percentage of\nfiltering level, which is calculated by dividing 100% by the value of this\nargument (e.g. `itineraryFiltering = 0.5` → 200% worse itineraries are filtered).",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "walkReluctance",
                "description": "A multiplier for how bad walking is, compared to being in transit for equal\nlengths of time.Empirically, values between 10 and 20 seem to correspond\nwell to the concept of not wanting to walk too much without asking for\ntotally ridiculous itineraries, but this observation should in no way be\ntaken as scientific or definitive. Your mileage may vary. Default value: 2.0 ",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "walkOnStreetReluctance",
                "description": "How much more reluctant is the user to walk on streets with car traffic allowed. Default value: 1.0",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "waitReluctance",
                "description": "How much worse is waiting for a transit vehicle than being on a transit\nvehicle, as a multiplier. The default value treats wait and on-vehicle time\nas the same. It may be tempting to set this higher than walkReluctance (as\nstudies often find this kind of preferences among riders) but the planner\nwill take this literally and walk down a transit line to avoid waiting at a\nstop. This used to be set less than 1 (0.95) which would make waiting\noffboard preferable to waiting onboard in an interlined trip. That is also\nundesirable. If we only tried the shortest possible transfer at each stop to\nneighboring stop patterns, this problem could disappear. Default value: 1.0.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "waitAtBeginningFactor",
                "description": "How much less bad is waiting at the beginning of the trip (replaces\n`waitReluctance` on the first boarding). Default value: 0.4",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "walkSpeed",
                "description": "Max walk speed along streets, in meters per second. Default value: 1.33",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "bikeSpeed",
                "description": "Max bike speed along streets, in meters per second. Default value: 5.0",
                "type": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "bikeSwitchTime",
                "description": "Time to get on and off your own bike, in seconds. Default value: 0",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "bikeSwitchCost",
                "description": "Cost of getting on and off your own bike. Unit: seconds. Default value: 0",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "optimize",
                "description": "Optimization type for bicycling legs, e.g. prefer flat terrain. Default value: `QUICK`",
                "type": {
                  "kind": "ENUM",
                  "name": "OptimizeType",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "triangle",
                "description": "Triangle optimization parameters for bicycling legs. Only effective when `optimize` is set to **TRIANGLE**.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputTriangle",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "arriveBy",
                "description": "Whether the itinerary should depart at the specified time (false), or arrive\nto the destination at the specified time (true). Default value: false.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "intermediatePlaces",
                "description": "An ordered list of intermediate locations to be visited.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "InputCoordinates",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "preferred",
                "description": "List of routes and agencies which are given higher preference when planning the itinerary",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputPreferred",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "unpreferred",
                "description": "List of routes and agencies which are given lower preference when planning the itinerary",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputUnpreferred",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "walkBoardCost",
                "description": "This prevents unnecessary transfers by adding a cost for boarding a vehicle. Unit: seconds. Default value: 600",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "bikeBoardCost",
                "description": "Separate cost for boarding a vehicle with a bicycle, which is more difficult\nthan on foot. Unit: seconds. Default value: 600",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "banned",
                "description": "List of routes, trips, agencies and stops which are not used in the itinerary",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputBanned",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "transferPenalty",
                "description": "An extra penalty added on transfers (i.e. all boardings except the first\none). Not to be confused with bikeBoardCost and walkBoardCost, which are the\ncost of boarding a vehicle with and without a bicycle. The boardCosts are\nused to model the 'usual' perceived cost of using a transit vehicle, and the\ntransferPenalty is used when a user requests even less transfers. In the\nlatter case, we don't actually optimize for fewest transfers, as this can\nlead to absurd results. Consider a trip in New York from Grand Army Plaza\n(the one in Brooklyn) to Kalustyan's at noon. The true lowest transfers\nroute is to wait until midnight, when the 4 train runs local the whole way.\nThe actual fastest route is the 2/3 to the 4/5 at Nevins to the 6 at Union\nSquare, which takes half an hour. Even someone optimizing for fewest\ntransfers doesn't want to wait until midnight. Maybe they would be willing\nto walk to 7th Ave and take the Q to Union Square, then transfer to the 6.\nIf this takes less than optimize_transfer_penalty seconds, then that's what\nwe'll return. Default value: 0.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "batch",
                "description": "This argument has no use for itinerary planning and will be removed later.  \n ~~When true, do not use goal direction or stop at the target, build a full SPT. Default value: false.~~",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "modes",
                "description": "Deprecated, use `transportModes` instead.  \n ~~The set of TraverseModes that a user is willing to use. Default value: WALK | TRANSIT.~~",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "transportModes",
                "description": "List of transportation modes that the user is willing to use. Default: `[\"WALK\",\"TRANSIT\"]`",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "TransportMode",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "modeWeight",
                "description": "The weight multipliers for transit modes. WALK, BICYCLE, CAR, TRANSIT and LEG_SWITCH are not included.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "InputModeWeight",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "allowBikeRental",
                "description": "Is bike rental allowed? Default value: false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "boardSlack",
                "description": "Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "alightSlack",
                "description": "Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "minTransferTime",
                "description": "A global minimum transfer time (in seconds) that specifies the minimum\namount of time that must pass between exiting one transit vehicle and\nboarding another. This time is in addition to time it might take to walk\nbetween transit stops. Default value: 0",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "nonpreferredTransferPenalty",
                "description": "Penalty (in seconds) for using a non-preferred transfer. Default value: 180",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "maxTransfers",
                "description": "Maximum number of transfers. Default value: 2",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "startTransitStopId",
                "description": "This argument has currently no effect on which itineraries are returned. Use\nargument `fromPlace` to start the itinerary from a specific stop.  \n ~~A transit stop that this trip must start from~~",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "startTransitTripId",
                "description": "ID of the trip on which the itinerary starts. This argument can be used to\nplan itineraries when the user is already onboard a vehicle. When using this\nargument, arguments `time` and `from` should be set based on a vehicle\nposition message received from the vehicle running the specified trip.  \n **Note:** this argument only takes into account the route and estimated\ntravel time of the trip (and therefore arguments `time` and `from` must be\nused correctly to get meaningful itineraries).",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "claimInitialWait",
                "description": "No effect on itinerary planning, adjust argument `time` instead to get later departures.  \n ~~The maximum wait time in seconds the user is willing to delay trip start. Only effective in Analyst.~~",
                "type": {
                  "kind": "SCALAR",
                  "name": "Long",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "reverseOptimizeOnTheFly",
                "description": "**Consider this argument experimental** – setting this argument to true\ncauses timeouts and unoptimal routes in many cases.  \n When true, reverse optimize (find alternative transportation mode, which\nstill arrives to the destination in time) this search on the fly after\nprocessing each transit leg, rather than reverse-optimizing the entire path\nwhen it's done. Default value: false.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "omitCanceled",
                "description": "When false, return itineraries using canceled trips. Default value: true.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "true"
              },
              {
                "name": "ignoreRealtimeUpdates",
                "description": "When true, realtime updates are ignored during this search. Default value: false",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "disableRemainingWeightHeuristic",
                "description": "Only useful for testing and troubleshooting.  \n ~~If true, the remaining weight heuristic is disabled. Currently only\nimplemented for the long distance path service. Default value: false.~~",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "locale",
                "description": "Two-letter language code (ISO 639-1) used for returned text.  \n **Note:** only part of the data has translations available and names of\nstops and POIs are returned in their default language. Due to missing\ntranslations, it is sometimes possible that returned text uses a mixture of two languages.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "ticketTypes",
                "description": "**Deprecated:** Use `allowedTicketTypes` instead.  \nA comma-separated list of allowed ticket types.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "allowedTicketTypes",
                "description": "List of ticket types that are allowed to be used in itineraries.  \nSee `ticketTypes` query for list of possible ticket types.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "heuristicStepsPerMainStep",
                "description": "Tuning parameter for the search algorithm, mainly useful for testing.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "compactLegsByReversedSearch",
                "description": "Whether legs should be compacted by performing a reversed search.  \n **Experimental argument, will be removed!**",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "allowedBikeRentalNetworks",
                "description": "Which bike rental networks can be used. By default, all networks are allowed.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Plan",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "ID",
        "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "Node",
        "description": "An object with an ID",
        "fields": [
          {
            "name": "id",
            "description": "The ID of an object",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Agency",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Route",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Pattern",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Trip",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Stop",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Cluster",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "stopAtDistance",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Alert",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "TicketType",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "placeAtDistance",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "DepartureRow",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BikeRentalStation",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BikePark",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "CarPark",
            "ofType": null
          }
        ]
      },
      {
        "kind": "OBJECT",
        "name": "Feed",
        "description": "A feed provides routing data (stops, routes, timetables, etc.) from one or more public transport agencies.",
        "fields": [
          {
            "name": "feedId",
            "description": "ID of the feed",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "agencies",
            "description": "List of agencies which provide data to this feed",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Agency",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Agency",
        "description": "A public transport agency",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gtfsId",
            "description": "Agency feed and id",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Name of the agency",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": "URL to the home page of the agency",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timezone",
            "description": "ID of the time zone which this agency operates on",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lang",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "phone",
            "description": "Phone number which customers can use to contact this agency",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fareUrl",
            "description": "URL to a web page which has information of fares used by this agency",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routes",
            "description": "List of routes operated by this agency",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alerts",
            "description": "List of alerts which have an effect on all operations of the agency (e.g. a strike)",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Alert",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Route",
        "description": "Route represents a public transportation service, usually from point A to point\nB and *back*, shown to customers under a single name, e.g. bus 550. Routes\ncontain patterns (see field `patterns`), which describe different variants of\nthe route, e.g. outbound pattern from point A to point B and inbound pattern\nfrom point B to point A.",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gtfsId",
            "description": "ID of the route in format `FeedId:RouteId`",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "agency",
            "description": "Agency operating the route",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Agency",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shortName",
            "description": "Short name of the route, usually a line number, e.g. 550",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "longName",
            "description": "Long name of the route, e.g. Helsinki-Leppävaara",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mode",
            "description": "Transport mode of this route, e.g. `BUS`",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "Mode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": "The raw GTFS route type as a integer. For the list of possible values, see:\nhttps://developers.google.com/transit/gtfs/reference/#routestxt and\nhttps://developers.google.com/transit/gtfs/reference/extended-route-types",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "desc",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "color",
            "description": "The color (in hexadecimal format) the agency operating this route would prefer\nto use on UI elements (e.g. polylines on a map) related to this route. This\nvalue is not available for most routes.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "textColor",
            "description": "The color (in hexadecimal format) the agency operating this route would prefer\nto use when displaying text related to this route. This value is not available\nfor most routes.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAllowed",
            "description": null,
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "BikesAllowed",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "patterns",
            "description": "List of patterns which operate on this route",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stops",
            "description": "List of stops on this route",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trips",
            "description": "List of trips which operate on this route",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Trip",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alerts",
            "description": "List of alerts which have an effect on the route",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Alert",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Mode",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "AIRPLANE",
            "description": "AIRPLANE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "BICYCLE",
            "description": "BICYCLE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "BUS",
            "description": "BUS",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "CABLE_CAR",
            "description": "CABLE_CAR",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "CAR",
            "description": "CAR",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FERRY",
            "description": "FERRY",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FUNICULAR",
            "description": "FUNICULAR",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "GONDOLA",
            "description": "GONDOLA",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "LEG_SWITCH",
            "description": "Only used internally. No use for API users.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "RAIL",
            "description": "RAIL",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBWAY",
            "description": "SUBWAY",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TRAM",
            "description": "TRAM",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TRANSIT",
            "description": "A special transport mode, which includes all public transport.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "WALK",
            "description": "WALK",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Int",
        "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BikesAllowed",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NO_INFORMATION",
            "description": "There is no bike information for the trip.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ALLOWED",
            "description": "The vehicle being used on this particular trip can accommodate at least one bicycle.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NOT_ALLOWED",
            "description": "No bicycles are allowed on this trip.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Pattern",
        "description": "Pattern is sequence of stops used by trips on a specific direction and variant\nof a route. Most routes have only two patterns: one for outbound trips and one\nfor inbound trips",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "route",
            "description": "The route this pattern runs on",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directionId",
            "description": "Direction of the pattern. Possible values: 0, 1 or -1.  \n -1 indicates that the direction is irrelevant, i.e. the route has patterns only in one direction.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Name of the pattern. Pattern name can be just the name of the route or it can\ninclude details of destination and origin stops.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "code",
            "description": "ID of the pattern",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "headsign",
            "description": "Vehicle headsign used by trips of this pattern",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trips",
            "description": "Trips which run on this pattern",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Trip",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tripsForDate",
            "description": "Trips which run on this pattern on the specified date",
            "args": [
              {
                "name": "serviceDay",
                "description": "Deprecated, please switch to serviceDate instead",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "serviceDate",
                "description": "Return trips of the pattern active on this date. Format: YYYYMMDD",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Trip",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stops",
            "description": "List of stops served by this pattern",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "geometry",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Coordinates",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "patternGeometry",
            "description": "Coordinates of the route of this pattern in Google polyline encoded format",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Geometry",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "semanticHash",
            "description": "Hash code of the pattern. This value is stable and not dependent on the\npattern id, i.e. this value can be used to check whether two patterns are the\nsame, even if their ids have changed.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alerts",
            "description": "List of alerts which have an effect on trips of the pattern",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Alert",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Trip",
        "description": "Trip is a specific occurance of a pattern, usually identified by route, direction on the route and exact departure time.",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gtfsId",
            "description": "ID of the trip in format `FeedId:TripId`",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "route",
            "description": "The route the trip is running on",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "activeDates",
            "description": "List of dates when this trip is in service. Format: YYYYMMDD",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tripShortName",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tripHeadsign",
            "description": "Headsign of the vehicle when running on this trip",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routeShortName",
            "description": "Short name of the route this trip is running. See field `shortName` of Route.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directionId",
            "description": "Direction code of the trip, i.e. is this the outbound or inbound trip of a\npattern. Possible values: 0, 1 or `null` if the direction is irrelevant, i.e.\nthe pattern has trips only in one direction.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "blockId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "shapeId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelchairAccessible",
            "description": "Whether the vehicle running this trip can be boarded by a wheelchair",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "WheelchairBoarding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAllowed",
            "description": "Whether bikes are allowed on board the vehicle running this trip",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "BikesAllowed",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pattern",
            "description": "The pattern the trip is running on",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Pattern",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stops",
            "description": "List of stops this trip passes through",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Stop",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "semanticHash",
            "description": "Hash code of the trip. This value is stable and not dependent on the trip id.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stoptimes",
            "description": "List of times when this trip arrives to or departs from a stop",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departureStoptime",
            "description": "Departure time from the first stop",
            "args": [
              {
                "name": "serviceDate",
                "description": "Date for which the departure time is returned. Format: YYYYMMDD. If this\nargument is not used, field `serviceDay` in the stoptime will have a value of 0.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Stoptime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "arrivalStoptime",
            "description": "Arrival time to the final stop",
            "args": [
              {
                "name": "serviceDate",
                "description": "Date for which the arrival time is returned. Format: YYYYMMDD. If this\nargument is not used, field `serviceDay` in the stoptime will have a value of 0.",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Stoptime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stoptimesForDate",
            "description": null,
            "args": [
              {
                "name": "serviceDay",
                "description": "Deprecated, please switch to serviceDate instead",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "serviceDate",
                "description": "Date for which stoptimes are returned. Format: YYYYMMDD",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "geometry",
            "description": "List of coordinates of this trip's route",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tripGeometry",
            "description": "Coordinates of the route of this trip in Google polyline encoded format",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Geometry",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alerts",
            "description": "List of alerts which have an effect on this trip",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Alert",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "WheelchairBoarding",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NO_INFORMATION",
            "description": "There is no accessibility information for the stop.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "POSSIBLE",
            "description": "At least some vehicles at this stop can be boarded by a rider in a wheelchair.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NOT_POSSIBLE",
            "description": "Wheelchair boarding is not possible at this stop.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Stop",
        "description": "Stop can represent either a single public transport stop, where passengers can\nboard and/or disembark vehicles, or a station, which contains multiple stops.\nSee field `locationType`.",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopTimesForPattern",
            "description": "Returns timetable of the specified pattern at this stop",
            "args": [
              {
                "name": "id",
                "description": "Id of the pattern",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "startTime",
                "description": "Return  departures after this time. Format: Unix timestamp in seconds. Default value: current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "Long",
                  "ofType": null
                },
                "defaultValue": "0"
              },
              {
                "name": "timeRange",
                "description": "Return stoptimes within this time range, starting from `startTime`. Unit: Seconds",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400"
              },
              {
                "name": "numberOfDepartures",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "2"
              },
              {
                "name": "omitNonPickups",
                "description": "If true, only those departures which allow boarding are returned",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "omitCanceled",
                "description": "If false, returns also canceled trips",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "true"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gtfsId",
            "description": "ÌD of the stop in format `FeedId:StopId`",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Name of the stop, e.g. Pasilan asema",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the stop (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the stop (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "code",
            "description": "Stop code which is visible at the stop",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "desc",
            "description": "Description of the stop, usually a street name",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "zoneId",
            "description": "ID of the zone where this stop is located",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "url",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "locationType",
            "description": "Identifies whether this stop represents a stop or station.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "LocationType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "parentStation",
            "description": "The station which this stop is part of (or null if this stop is not part of a station)",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "wheelchairBoarding",
            "description": "Whether wheelchair boarding is possible for at least some of vehicles on this stop",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "WheelchairBoarding",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "direction",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timezone",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "vehicleType",
            "description": "The raw GTFS route type used by routes which pass through this stop. For the\nlist of possible values, see:\nhttps://developers.google.com/transit/gtfs/reference/#routestxt and\nhttps://developers.google.com/transit/gtfs/reference/extended-route-types",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "vehicleMode",
            "description": "Transport mode (e.g. `BUS`) used by routes which pass through this stop or\n`null` if mode cannot be determined, e.g. in case no routes pass through the stop.  \n Note that also other types of vehicles may use the stop, e.g. tram replacement\nbuses might use stops which have `TRAM` as their mode.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "Mode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "platformCode",
            "description": "Identifier of the platform, usually a number. This value is only present for stops that are part of a station",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cluster",
            "description": "The cluster which this stop is part of",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Cluster",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stops",
            "description": "Returns all stops that are children of this station (Only applicable for stations)",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routes",
            "description": "Routes which pass through this stop",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Route",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "patterns",
            "description": "Patterns which pass through this stop",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transfers",
            "description": "List of nearby stops which can be used for transfers",
            "args": [
              {
                "name": "maxDistance",
                "description": "Maximum distance to the transfer stop. Defaults to unlimited.  \n **Note:** only stops that are linked as a transfer stops to this stop are\nreturned, i.e. this does not do a query to search for *all* stops within\nradius of `maxDistance`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "stopAtDistance",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stoptimesForServiceDate",
            "description": "Returns list of stoptimes for the specified date",
            "args": [
              {
                "name": "date",
                "description": "Date in format YYYYMMDD",
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "omitNonPickups",
                "description": "If true, only those departures which allow boarding are returned",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "omitCanceled",
                "description": "If false, returns also canceled trips",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StoptimesInPattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stoptimesForPatterns",
            "description": "Returns list of stoptimes (arrivals and departures) at this stop, grouped by patterns",
            "args": [
              {
                "name": "startTime",
                "description": "Return departures after this time. Format: Unix timestamp in seconds. Default value: current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "Long",
                  "ofType": null
                },
                "defaultValue": "0"
              },
              {
                "name": "timeRange",
                "description": "Return stoptimes within this time range, starting from `startTime`. Unit: Seconds",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400"
              },
              {
                "name": "numberOfDepartures",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "5"
              },
              {
                "name": "omitNonPickups",
                "description": "If true, only those departures which allow boarding are returned",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "omitCanceled",
                "description": "If false, returns also canceled trips",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "true"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "StoptimesInPattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stoptimesWithoutPatterns",
            "description": "Returns list of stoptimes (arrivals and departures) at this stop",
            "args": [
              {
                "name": "startTime",
                "description": "Return departures after this time. Format: Unix timestamp in seconds. Default value: current time",
                "type": {
                  "kind": "SCALAR",
                  "name": "Long",
                  "ofType": null
                },
                "defaultValue": "0"
              },
              {
                "name": "timeRange",
                "description": "Return stoptimes within this time range, starting from `startTime`. Unit: Seconds",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400"
              },
              {
                "name": "numberOfDepartures",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "5"
              },
              {
                "name": "omitNonPickups",
                "description": "If true, only those departures which allow boarding are returned",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "omitCanceled",
                "description": "If false, returns also canceled trips",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "true"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alerts",
            "description": "List of alerts which have an effect on this stop",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Alert",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "PlaceInterface",
        "description": "Interface for places, e.g. stops, stations, parking areas..",
        "fields": [
          {
            "name": "id",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the place (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the place (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Stop",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "DepartureRow",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BikeRentalStation",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "BikePark",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "CarPark",
            "ofType": null
          }
        ]
      },
      {
        "kind": "SCALAR",
        "name": "Float",
        "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Long",
        "description": "Long type",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Stoptime",
        "description": "Stoptime represents the time when a specific trip arrives to or departs from a specific stop.",
        "fields": [
          {
            "name": "stop",
            "description": "The stop where this arrival/departure happens",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "scheduledArrival",
            "description": "Scheduled arrival time. Format: seconds since midnight of the departure date",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeArrival",
            "description": "Realtime prediction of arrival time. Format: seconds since midnight of the departure date",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "arrivalDelay",
            "description": "The offset from the scheduled arrival time in seconds. Negative values\nindicate that the trip is running ahead of schedule.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "scheduledDeparture",
            "description": "Scheduled departure time. Format: seconds since midnight of the departure date",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeDeparture",
            "description": "Realtime prediction of departure time. Format: seconds since midnight of the departure date",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departureDelay",
            "description": "The offset from the scheduled departure time in seconds. Negative values\nindicate that the trip is running ahead of schedule",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timepoint",
            "description": "true, if this stop is used as a time equalization stop. false otherwise.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": "true, if this stoptime has real-time data available",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeState",
            "description": "State of real-time data",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "RealtimeState",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pickupType",
            "description": "Whether the vehicle can be boarded at this stop. This field can also be used\nto indicate if boarding is possible only with special arrangements.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "PickupDropoffType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "dropoffType",
            "description": "Whether the vehicle can be disembarked at this stop. This field can also be\nused to indicate if disembarkation is possible only with special arrangements.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "PickupDropoffType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceDay",
            "description": "Departure date of the trip. Format: Unix timestamp (local time) in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trip",
            "description": "Trip which this stoptime is for",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Trip",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopHeadsign",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": true,
            "deprecationReason": "Use headsign instead, will be removed in the future"
          },
          {
            "name": "headsign",
            "description": "Vehicle headsign of the trip on this stop. Trip headsigns can change during\nthe trip (e.g. on routes which run on loops), so this value should be used\ninstead of `tripHeadsign` to display the headsign relevant to the user. ",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopSequence",
            "description": "The sequence number of the stop",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "RealtimeState",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCHEDULED",
            "description": "The trip information comes from the GTFS feed, i.e. no real-time update has been applied.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UPDATED",
            "description": "The trip information has been updated, but the trip pattern stayed the same as the trip pattern of the scheduled trip.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "CANCELED",
            "description": "The trip has been canceled by a real-time update.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ADDED",
            "description": "The trip has been added using a real-time update, i.e. the trip was not present in the GTFS feed.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MODIFIED",
            "description": "The trip information has been updated and resulted in a different trip pattern\ncompared to the trip pattern of the scheduled trip.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "PickupDropoffType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCHEDULED",
            "description": "Regularly scheduled pickup / drop off.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NONE",
            "description": "No pickup / drop off available.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "CALL_AGENCY",
            "description": "Must phone agency to arrange pickup / drop off.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "COORDINATE_WITH_DRIVER",
            "description": "Must coordinate with driver to arrange pickup / drop off.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "LocationType",
        "description": "Identifies whether this stop represents a stop or station.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "STOP",
            "description": "A location where passengers board or disembark from a transit vehicle.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "STATION",
            "description": "A physical structure or area that contains one or more stop.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENTRANCE",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Cluster",
        "description": "Cluster is a list of stops grouped by name and proximity",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "gtfsId",
            "description": "ID of the cluster",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Name of the cluster",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the center of this cluster (i.e. average latitude of stops in this cluster)",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the center of this cluster (i.e. average longitude of stops in this cluster)",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stops",
            "description": "List of stops in the cluster",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stop",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "stopAtDistance",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stop",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "Walking distance to the stop along streets and paths",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "StoptimesInPattern",
        "description": "Stoptimes grouped by pattern",
        "fields": [
          {
            "name": "pattern",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Pattern",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stoptimes",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Alert",
        "description": "Alert of a current or upcoming disruption in public transportation",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertHash",
            "description": "hashcode from the original GTFS-RT alert",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "feed",
            "description": "The feed in which this alert was published",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "agency",
            "description": "Agency affected by the disruption. Note that this value is present only if the\ndisruption has an effect on all operations of the agency (e.g. in case of a strike).",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Agency",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "route",
            "description": "Route affected by the disruption",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Route",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trip",
            "description": "Trip affected by the disruption",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Trip",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stop",
            "description": "Stop affected by the disruption",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "patterns",
            "description": "Patterns affected by the disruption",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Pattern",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertHeaderText",
            "description": "Header of the alert, if available",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertHeaderTextTranslations",
            "description": "Header of the alert in all different available languages",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TranslatedString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertDescriptionText",
            "description": "Long description of the alert",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertDescriptionTextTranslations",
            "description": "Long descriptions of the alert in all different available languages",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TranslatedString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertUrl",
            "description": "Url with more information",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertUrlTranslations",
            "description": "Url with more information in all different available languages",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TranslatedString",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertEffect",
            "description": "Alert effect",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "AlertEffectType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertCause",
            "description": "Alert cause",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "AlertCauseType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "alertSeverityLevel",
            "description": "Alert severity level",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "AlertSeverityLevelType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "effectiveStartDate",
            "description": "Time when this alert comes into effect. Format: Unix timestamp in seconds",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "effectiveEndDate",
            "description": "Time when this alert is not in effect anymore. Format: Unix timestamp in seconds",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TranslatedString",
        "description": "Text with language",
        "fields": [
          {
            "name": "text",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "language",
            "description": "Two-letter language code (ISO 639-1)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AlertEffectType",
        "description": "Effect of a alert",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NO_SERVICE",
            "description": "NO_SERVICE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "REDUCED_SERVICE",
            "description": "REDUCED_SERVICE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SIGNIFICANT_DELAYS",
            "description": "SIGNIFICANT_DELAYS",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "DETOUR",
            "description": "DETOUR",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ADDITIONAL_SERVICE",
            "description": "ADDITIONAL_SERVICE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MODIFIED_SERVICE",
            "description": "MODIFIED_SERVICE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OTHER_EFFECT",
            "description": "OTHER_EFFECT",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNKNOWN_EFFECT",
            "description": "UNKNOWN_EFFECT",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "STOP_MOVED",
            "description": "STOP_MOVED",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NO_EFFECT",
            "description": "NO_EFFECT",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AlertCauseType",
        "description": "Cause of a alert",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "UNKNOWN_CAUSE",
            "description": "UNKNOWN_CAUSE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OTHER_CAUSE",
            "description": "OTHER_CAUSE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TECHNICAL_PROBLEM",
            "description": "TECHNICAL_PROBLEM",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "STRIKE",
            "description": "STRIKE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "DEMONSTRATION",
            "description": "DEMONSTRATION",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCIDENT",
            "description": "ACCIDENT",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "HOLIDAY",
            "description": "HOLIDAY",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "WEATHER",
            "description": "WEATHER",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MAINTENANCE",
            "description": "MAINTENANCE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "CONSTRUCTION",
            "description": "CONSTRUCTION",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "POLICE_ACTIVITY",
            "description": "POLICE_ACTIVITY",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MEDICAL_EMERGENCY",
            "description": "MEDICAL_EMERGENCY",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AlertSeverityLevelType",
        "description": "Severity level of a alert",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "UNKNOWN_SEVERITY",
            "description": "Severity of alert is unknown",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INFO",
            "description": "Info alerts are used for informational messages that should not have a\nsignificant effect on user's journey, for example: A single entrance to a\nmetro station is temporarily closed.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "WARNING",
            "description": "Warning alerts are used when a single stop or route has a disruption that can\naffect user's journey, for example: All trams on a specific route are running\nwith irregular schedules.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SEVERE",
            "description": "Severe alerts are used when a significant part of public transport services is\naffected, for example: All train services are cancelled due to technical problems.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Geometry",
        "description": null,
        "fields": [
          {
            "name": "length",
            "description": "The number of points in the string",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "points",
            "description": "List of coordinates of in a Google encoded polyline format (see\nhttps://developers.google.com/maps/documentation/utilities/polylinealgorithm)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Polyline",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Polyline",
        "description": "List of coordinates in an encoded polyline format (see\nhttps://developers.google.com/maps/documentation/utilities/polylinealgorithm).\nThe value appears in JSON as a string.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Coordinates",
        "description": null,
        "fields": [
          {
            "name": "lat",
            "description": "Latitude (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TicketType",
        "description": "Describes ticket type",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fareId",
            "description": "Ticket type ID in format `FeedId:TicketTypeId`. Ticket type IDs are usually\ncombination of ticket zones where the ticket is valid.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "price",
            "description": "Price of the ticket in currency that is specified in `currency` field",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "currency",
            "description": "ISO 4217 currency code",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "zones",
            "description": "List of zones where this ticket is valid.\n  Corresponds to field `zoneId` in **Stop** type.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "stopAtDistanceConnection",
        "description": "A connection to a list of items.",
        "fields": [
          {
            "name": "edges",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "stopAtDistanceEdge",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "stopAtDistanceEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "stopAtDistance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PageInfo",
        "description": "Information about pagination in a connection.",
        "fields": [
          {
            "name": "hasNextPage",
            "description": "When paginating forwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPreviousPage",
            "description": "When paginating backwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startCursor",
            "description": "When paginating backwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endCursor",
            "description": "When paginating forwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "FilterPlaceType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "STOP",
            "description": "Stops",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "DEPARTURE_ROW",
            "description": "Departure rows",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "BICYCLE_RENT",
            "description": "Bicycle rent stations",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "BIKE_PARK",
            "description": "Bike parks",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "CAR_PARK",
            "description": "Car parks",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputFilters",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "stops",
            "description": "Stops to include by GTFS id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "routes",
            "description": "Routes to include by GTFS id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "bikeRentalStations",
            "description": "Bike rentals to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "bikeParks",
            "description": "Bike parks to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "carParks",
            "description": "Car parks to include by id.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "placeAtDistanceConnection",
        "description": "A connection to a list of items.",
        "fields": [
          {
            "name": "edges",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "placeAtDistanceEdge",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "placeAtDistanceEdge",
        "description": "An edge in a connection.",
        "fields": [
          {
            "name": "node",
            "description": "The item at the end of the edge",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "placeAtDistance",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cursor",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "placeAtDistance",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "place",
            "description": null,
            "args": [],
            "type": {
              "kind": "INTERFACE",
              "name": "PlaceInterface",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "Walking distance to the place along streets and paths",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DepartureRow",
        "description": "Departure row is a location, which lists departures of a certain pattern from a\nstop. Departure rows are identified with the pattern, so querying departure rows\nwill return only departures from one stop per pattern",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stop",
            "description": "Stop from which the departures leave",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the stop (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the stop (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pattern",
            "description": "Pattern of the departure row",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Pattern",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stoptimes",
            "description": "Departures of the pattern from the stop",
            "args": [
              {
                "name": "startTime",
                "description": "Return rows departing after this time. Time format: Unix timestamp in seconds. Default: current time.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Long",
                  "ofType": null
                },
                "defaultValue": "0"
              },
              {
                "name": "timeRange",
                "description": "How many seconds ahead to search for departures. Default is one day.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "86400"
              },
              {
                "name": "numberOfDepartures",
                "description": "Maximum number of departures to return.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": "1"
              },
              {
                "name": "omitNonPickups",
                "description": "If true, only those departures which allow boarding are returned",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              },
              {
                "name": "omitCanceled",
                "description": "If false, returns also canceled trips",
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "true"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stoptime",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "serviceTimeRange",
        "description": "Time range for which the API has data available",
        "fields": [
          {
            "name": "start",
            "description": "Time from which the API has data available. Format: Unix timestamp in seconds",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "end",
            "description": "Time until which the API has data available. Format: Unix timestamp in seconds",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BikeRentalStation",
        "description": "Bike rental station represents a location where users can rent bicycles for a fee.",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stationId",
            "description": "ID of the bike rental station",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Name of the bike rental station",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikesAvailable",
            "description": "Number of bikes currently available on the rental station.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": "Number of free spaces currently available on the rental station.  \n Note that this value being 0 does not necessarily indicate that bikes cannot\nbe returned to this station, as it might be possible to leave the bike in the\nvicinity of the rental station, even if the bike racks don't have any spaces\navailable (see field `allowDropoff`).",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "capacity",
            "description": "Nominal capacity (number of racks) of the rental station.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "state",
            "description": "A description of the current state of this bike rental station, e.g. \"Station on\"",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": "If true, values of `bikesAvailable` and `spacesAvailable` are updated from a\nreal-time source. If false, values of `bikesAvailable` and `spacesAvailable`\nare always the total capacity divided by two.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allowDropoff",
            "description": "If true, bikes can be returned to this station.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allowOverloading",
            "description": "If true, bikes can be returned even if spacesAvailable is zero or bikes > capacity.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isFloatingBike",
            "description": "If true, this is a free floating bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isCarStation",
            "description": "If true, this is a car rental system station.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "networks",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the bike rental station (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the bike rental station (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BikePark",
        "description": "Bike park represents a location where bicycles can be parked.",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeParkId",
            "description": "ID of the bike park",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Name of the bike park",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": "Number of spaces available for bikes",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": "If true, value of `spacesAvailable` is updated from a real-time source.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the bike park (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the bike park (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tags",
            "description": "Additional information labels (tags) for the Bike park",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CarPark",
        "description": "Car park represents a location where cars can be parked.",
        "fields": [
          {
            "name": "id",
            "description": "Global object ID provided by Relay. This value can be used to refetch this object using **node** query.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carParkId",
            "description": "ID of the car park",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": "Name of the car park",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "maxCapacity",
            "description": "Number of parking spaces at the car park",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "spacesAvailable",
            "description": "Number of currently available parking spaces at the car park",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtime",
            "description": "If true, value of `spacesAvailable` is updated from a real-time source.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the car park (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the car park (WGS 84)",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tags",
            "description": "Additional information labels (tags) for the car park",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          },
          {
            "kind": "INTERFACE",
            "name": "PlaceInterface",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputCoordinates",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "lat",
            "description": "Latitude of the place (WGS 84)",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "lon",
            "description": "Longitude of the place (WGS 84)",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "address",
            "description": "The name of the place. If specified, the place name in results uses this value instead of `\"Origin\"` or `\"Destination\"`",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "locationSlack",
            "description": "The amount of time, in seconds, to spend at this location before venturing forth.",
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "OptimizeType",
        "description": "Optimization type for bicycling legs",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "QUICK",
            "description": "Prefer faster routes",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SAFE",
            "description": "Prefer safer routes, i.e. avoid crossing streets and use bike paths when possible",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FLAT",
            "description": "Prefer flat terrain",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "GREENWAYS",
            "description": "GREENWAYS",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TRIANGLE",
            "description": "**TRIANGLE** optimization type can be used to set relative preferences of optimization factors. See argument `triangle`.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TRANSFERS",
            "description": "Deprecated, use argument `transferPenalty` to optimize for less transfers.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputTriangle",
        "description": "Relative importances of optimization factors. Only effective for bicycling legs.  \n Invariant: `timeFactor + slopeFactor + safetyFactor == 1`",
        "fields": null,
        "inputFields": [
          {
            "name": "safetyFactor",
            "description": "Relative importance of safety",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "slopeFactor",
            "description": "Relative importance of flat terrain",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "timeFactor",
            "description": "Relative importance of duration",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputPreferred",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "routes",
            "description": "A comma-separated list of ids of the routes preferred by the user.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "agencies",
            "description": "A comma-separated list of ids of the agencies preferred by the user.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "otherThanPreferredRoutesPenalty",
            "description": "Penalty added for using every route that is not preferred if user set any\nroute as preferred. We return number of seconds that we are willing to wait\nfor preferred route.",
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputUnpreferred",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "routes",
            "description": "A comma-separated list of ids of the routes unpreferred by the user.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "agencies",
            "description": "A comma-separated list of ids of the agencies unpreferred by the user.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "useUnpreferredRoutesPenalty",
            "description": "Penalty added for using route that is unpreferred, i.e. number of seconds that\nwe are willing to wait for route that is unpreferred.",
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputBanned",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "routes",
            "description": "A comma-separated list of banned route ids",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "agencies",
            "description": "A comma-separated list of banned agency ids",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "trips",
            "description": "A comma-separated list of banned trip ids",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "stops",
            "description": "A comma-separated list of banned stop ids. Note that these stops are only\nbanned for boarding and disembarking vehicles — it is possible to get an\nitinerary where a vehicle stops at one of these stops",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "stopsHard",
            "description": "A comma-separated list of banned stop ids. Only itineraries where these stops\nare not travelled through are returned, e.g. if a bus route stops at one of\nthese stops, that route will not be used in the itinerary, even if the stop is\nnot used for boarding or disembarking the vehicle. ",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TransportMode",
        "description": "Transportation mode which can be used in the itinerary",
        "fields": null,
        "inputFields": [
          {
            "name": "mode",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "Mode",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "qualifier",
            "description": "Optional additional qualifier for transport mode, e.g. `RENT`",
            "type": {
              "kind": "ENUM",
              "name": "Qualifier",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "Qualifier",
        "description": "Additional qualifier for a transport mode.  \n Note that qualifiers can only be used with certain transport modes.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "RENT",
            "description": "The vehicle used for transport can be rented",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "HAVE",
            "description": "~~HAVE~~  \n **Currently not used**",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PARK",
            "description": "The vehicle used must be left to a parking area before continuing the journey.\nThis qualifier is usable with transport modes `CAR` and `BICYCLE`.  \n Note that the vehicle is only parked if the journey is continued with public\ntransportation (e.g. if only `CAR` and `WALK` transport modes are allowed to\nbe used, the car will not be parked as it is used for the whole journey).",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "KEEP",
            "description": "~~KEEP~~  \n **Currently not used**",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PICKUP",
            "description": "The user can be picked up by someone else riding a vehicle",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "InputModeWeight",
        "description": null,
        "fields": null,
        "inputFields": [
          {
            "name": "TRAM",
            "description": "The weight of TRAM traverse mode. Values over 1 add cost to tram travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "SUBWAY",
            "description": "The weight of SUBWAY traverse mode. Values over 1 add cost to subway travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "RAIL",
            "description": "The weight of RAIL traverse mode. Values over 1 add cost to rail travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "BUS",
            "description": "The weight of BUS traverse mode. Values over 1 add cost to bus travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "FERRY",
            "description": "The weight of FERRY traverse mode. Values over 1 add cost to ferry travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "CABLE_CAR",
            "description": "The weight of CABLE_CAR traverse mode. Values over 1 add cost to cable car travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "GONDOLA",
            "description": "The weight of GONDOLA traverse mode. Values over 1 add cost to gondola travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "FUNICULAR",
            "description": "The weight of FUNICULAR traverse mode. Values over 1 add cost to funicular travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "AIRPLANE",
            "description": "The weight of AIRPLANE traverse mode. Values over 1 add cost to airplane travel and values under 1 decrease cost",
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Plan",
        "description": null,
        "fields": [
          {
            "name": "date",
            "description": "The time and date of travel. Format: Unix timestamp in milliseconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "from",
            "description": "The origin",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "to",
            "description": "The destination",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "itineraries",
            "description": "A list of possible itineraries",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Itinerary",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "messageEnums",
            "description": "A list of possible error messages as enum",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "messageStrings",
            "description": "A list of possible error messages in cleartext",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "debugOutput",
            "description": "Information about the timings for the plan generation",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "debugOutput",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Place",
        "description": null,
        "fields": [
          {
            "name": "name",
            "description": "For transit stops, the name of the stop. For points of interest, the name of the POI.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "vertexType",
            "description": "Type of vertex. (Normal, Bike sharing station, Bike P+R, Transit stop) Mostly\nused for better localization of bike sharing and P+R station names",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "VertexType",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "Latitude of the place (WGS 84)",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "Longitude of the place (WGS 84)",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "arrivalTime",
            "description": "The time the rider will arrive at the place. Format: Unix timestamp in milliseconds.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departureTime",
            "description": "The time the rider will depart the place. Format: Unix timestamp in milliseconds.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Long",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stop",
            "description": "The stop related to the place.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Stop",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "stopSequence",
            "description": "For transit stops, the sequence number of the stop.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikeRentalStation",
            "description": "The bike rental station related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BikeRentalStation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bikePark",
            "description": "The bike parking related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "BikePark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "carPark",
            "description": "The car parking related to the place",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "CarPark",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "VertexType",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NORMAL",
            "description": "NORMAL",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TRANSIT",
            "description": "TRANSIT",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "BIKEPARK",
            "description": "BIKEPARK",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "BIKESHARE",
            "description": "BIKESHARE",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PARKANDRIDE",
            "description": "PARKANDRIDE",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Itinerary",
        "description": null,
        "fields": [
          {
            "name": "startTime",
            "description": "Time when the user leaves from the origin. Format: Unix timestamp in milliseconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endTime",
            "description": "Time when the user arrives to the destination.. Format: Unix timestamp in milliseconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "duration",
            "description": "Duration of the trip on this itinerary, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "waitingTime",
            "description": "How much time is spent waiting for transit to arrive, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkTime",
            "description": "How much time is spent walking, in seconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "walkDistance",
            "description": "How far the user has to walk, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "legs",
            "description": "A list of Legs. Each Leg is either a walking (cycling, car) portion of the\nitinerary, or a transit leg on a particular vehicle. So a itinerary where the\nuser walks to the Q train, transfers to the 6, then walks to their\ndestination, has four legs.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Leg",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fares",
            "description": "Information about the fares for this itinerary",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "fare",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevationGained",
            "description": "How much elevation is gained, in total, over the course of the itinerary, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevationLost",
            "description": "How much elevation is lost, in total, over the course of the itinerary, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Leg",
        "description": null,
        "fields": [
          {
            "name": "startTime",
            "description": "The date and time when this leg begins. Format: Unix timestamp in milliseconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endTime",
            "description": "The date and time when this leg ends. Format: Unix timestamp in milliseconds.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "departureDelay",
            "description": "For transit leg, the offset from the scheduled departure time of the boarding\nstop in this leg, i.e. scheduled time of departure at boarding stop =\n`startTime - departureDelay`",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "arrivalDelay",
            "description": "For transit leg, the offset from the scheduled arrival time of the alighting\nstop in this leg, i.e. scheduled time of arrival at alighting stop = `endTime\n- arrivalDelay`",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mode",
            "description": "The mode (e.g. `WALK`) used when traversing this leg.",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "Mode",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "duration",
            "description": "The leg's duration in seconds",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "legGeometry",
            "description": "The leg's geometry.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Geometry",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "agency",
            "description": "For transit legs, the transit agency that operates the service used for this leg. For non-transit legs, `null`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Agency",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realTime",
            "description": "Whether there is real-time data about this Leg",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "realtimeState",
            "description": "State of real-time data",
            "args": [],
            "type": {
              "kind": "ENUM",
              "name": "RealtimeState",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "distance",
            "description": "The distance traveled while traversing the leg in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "transitLeg",
            "description": "Whether this leg is a transit leg or not.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "rentedBike",
            "description": "Whether this leg is traversed with a rented bike.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "from",
            "description": "The Place where the leg originates.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "to",
            "description": "The Place where the leg ends.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "route",
            "description": "For transit legs, the route that is used for traversing the leg. For non-transit legs, `null`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Route",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "trip",
            "description": "For transit legs, the trip that is used for traversing the leg. For non-transit legs, `null`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Trip",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "serviceDate",
            "description": "For transit legs, the service date of the trip. Format: YYYYMMDD. For non-transit legs, null.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interlineWithPreviousLeg",
            "description": "Interlines with previous leg. This is true when the same vehicle is used for\nthe previous leg as for this leg and passenger can stay inside the vehicle.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intermediateStops",
            "description": "For transit legs, intermediate stops between the Place where the leg\noriginates and the Place where the leg ends. For non-transit legs, null.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Stop",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intermediatePlaces",
            "description": "For transit legs, intermediate stops between the Place where the leg\noriginates and the Place where the leg ends. For non-transit legs, null.\nReturns Place type, which has fields for e.g. departure and arrival times",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Place",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "intermediatePlace",
            "description": "Whether the destination of this leg (field `to`) is one of the intermediate places specified in the query.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "steps",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "step",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "step",
        "description": null,
        "fields": [
          {
            "name": "distance",
            "description": "The distance in meters that this step takes.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lon",
            "description": "The longitude of the start of the step.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lat",
            "description": "The latitude of the start of the step.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevationProfile",
            "description": "The elevation profile as a list of { distance, elevation } values.",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "elevationProfileComponent",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "elevationProfileComponent",
        "description": null,
        "fields": [
          {
            "name": "distance",
            "description": "The distance from the start of the step, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "elevation",
            "description": "The elevation at this distance, in meters.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "fare",
        "description": null,
        "fields": [
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "currency",
            "description": "ISO 4217 currency code",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cents",
            "description": "Fare price in cents. **Note:** this value is dependent on the currency used,\nas one cent is not necessarily ¹/₁₀₀ of the basic monerary unit.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "components",
            "description": "Components which this fare is composed of",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "fareComponent",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "fareComponent",
        "description": "Component of the fare (i.e. ticket) for a part of the itinerary",
        "fields": [
          {
            "name": "fareId",
            "description": "ID of the ticket type. Corresponds to `fareId` in **TicketType**.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "currency",
            "description": "ISO 4217 currency code",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "cents",
            "description": "Fare price in cents. **Note:** this value is dependent on the currency used,\nas one cent is not necessarily ¹/₁₀₀ of the basic monerary unit.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Int",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "routes",
            "description": "List of routes which use this fare component",
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Route",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "debugOutput",
        "description": null,
        "fields": [
          {
            "name": "totalTime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pathCalculationTime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "precalculationTime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "renderingTime",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Long",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "timedOut",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Schema",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "fields": [
          {
            "name": "types",
            "description": "A list of all types supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "queryType",
            "description": "The type that query operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutationType",
            "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "subscriptionType",
            "description": "If this server support subscription, the type that subscription operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directives",
            "description": "A list of all directives supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Directive",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Type",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "fields": [
          {
            "name": "kind",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "__TypeKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Field",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interfaces",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possibleTypes",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enumValues",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__EnumValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputFields",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ofType",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__TypeKind",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCALAR",
            "description": "Indicates this type is a scalar.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Indicates this type is an enum. `enumValues` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Indicates this type is an input object. `inputFields` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "LIST",
            "description": "Indicates this type is a list. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NON_NULL",
            "description": "Indicates this type is a non-null. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Field",
        "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__InputValue",
        "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultValue",
            "description": "A GraphQL-formatted string representing the default value for this input value.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__EnumValue",
        "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Directive",
        "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "locations",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__DirectiveLocation",
        "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "QUERY",
            "description": "Location adjacent to a query operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MUTATION",
            "description": "Location adjacent to a mutation operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBSCRIPTION",
            "description": "Location adjacent to a subscription operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD",
            "description": "Location adjacent to a field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_DEFINITION",
            "description": "Location adjacent to a fragment definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_SPREAD",
            "description": "Location adjacent to a fragment spread.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INLINE_FRAGMENT",
            "description": "Location adjacent to an inline fragment.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "VARIABLE_DEFINITION",
            "description": "Location adjacent to a variable definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCHEMA",
            "description": "Location adjacent to a schema definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCALAR",
            "description": "Location adjacent to a scalar definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Location adjacent to an object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD_DEFINITION",
            "description": "Location adjacent to a field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ARGUMENT_DEFINITION",
            "description": "Location adjacent to an argument definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Location adjacent to an interface definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Location adjacent to a union definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Location adjacent to an enum definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM_VALUE",
            "description": "Location adjacent to an enum value definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Location adjacent to an input object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_FIELD_DEFINITION",
            "description": "Location adjacent to an input object field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      }
    ],
    "directives": [
      {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Skipped when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Included when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "deprecated",
        "description": "Marks an element of a GraphQL schema as no longer supported.",
        "locations": [
          "FIELD_DEFINITION",
          "ENUM_VALUE"
        ],
        "args": [
          {
            "name": "reason",
            "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": "\"No longer supported\""
          }
        ]
      },
      {
        "name": "client",
        "description": "Direct the client to resolve this field locally, either from the cache or local resolvers.",
        "locations": [
          "FIELD",
          "FRAGMENT_DEFINITION",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "always",
            "description": "When true, the client will never use the cache for this value. See\nhttps://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "export",
        "description": "Export this locally resolved field as a variable to be used in the remainder of this query. See\nhttps://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables",
        "locations": [
          "FIELD"
        ],
        "args": [
          {
            "name": "as",
            "description": "The variable name to export this field as.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "connection",
        "description": "Specify a custom store key for this result. See\nhttps://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive",
        "locations": [
          "FIELD"
        ],
        "args": [
          {
            "name": "key",
            "description": "Specify the store key.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "filter",
            "description": "An array of query argument names to include in the generated custom store key.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ]
      }
    ]
  }
}